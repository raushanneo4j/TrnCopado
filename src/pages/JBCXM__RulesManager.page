<apex:page docType="html-5.0" controller="JBCXM.AdminBroker" sidebar="false" title="Rules Manager" tabStyle="Administration__tab" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker">
<apex:outputpanel rendered="{!If($CurrentPage.parameters.traceperformance == "true" , true, false)}">
    <script type="text/javascript">
        if(window.performance && window.performance.mark && window.performance.measure){
            window.GSPerformance = {
                map:{},
                mark: function(){
                    try{
                        window.performance.mark.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create mark", e);
                    }
                },
                measure: function(measureName){
                    try{
                        measureName = this.map[measureName]?measureName_this.map[measureName]:measureName;
                        this.map[measureName] = this.map[measureName]?this.map[measureName]+1:1;
                        window.performance.measure.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create measure", e);
                    }
                }
            };
        }
    </script>
</apex:outputpanel>
    <script type="text/javascript">
        if(!window.GSPerformance){
            window.GSPerformance = {};
            window.GSPerformance.mark = window.GSPerformance.measure = function(){};
        }
        window.GSPerformance.mark('apex_parsing_start');
    </script>
    <script src="/soap/ajax/31.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/31.0/apex.js" type="text/javascript"></script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSVendor/js/vendor/semver.min.js"></script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSVendor/js/vendor/HTMLSanitizer.js"></script>
    <script>
            var hc                      = eval({!(headerConfig)});
            var authorization = "";
            var appSessionId = hc.appSessionId;
            var appUserId = hc.appUserId;
            var appOrgId = hc.appOrgId;
            var apiEndPoint = hc.gatewayURL;
            var nsParams = fakeEval('{!JSINHTMLENCODE(nsParams)}');
            var CDNSettings = eval({!(GainsightCDNSettings)});
            var GS = GS || {};
            var host = "SALESFORCE";
            GS.gainsightTabs = eval({!(GainsightTabs)});
            GS.nsParams = nsParams;
            GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";
            GS.commonRemotingEndPoint     = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
            GS.commonRemotingBulkEndPoint     = '{!$RemoteAction.GSCommonBroker.gsCommonBulkRequestBroker}';
            GS.sessionId = "{!NSSessionId}";
            GS.NSSessionId = "{!NSSessionId}";
            GS.isScorecardEnabled = {!(isScorecardEnabled)};
            GS.isScorecardV2Enabled = {!(isScorecardV2Enabled)};
            GS.nsURL = nsParams.url;
            GS.remotingEndPoint     = '{!$RemoteAction.AdminBroker.adminRequestBroker}';
            GS.usageConfigInfo      = fakeEval('{!JSINHTMLENCODE(UsageConfigInfo)}');
            GS.packageNS            = "{!(pkgNS)}";
            GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";
            GS.customLookUpConfig   = fakeEval('{!JSINHTMLENCODE(customLookUpConfigMap)}');
            GS.nsScorecardEnabled   = {!(nsScorecardEnabled)};
            GS.userConfig = {
                userLocale  : {!(dateTimeFormatByLocale)},
                userName    : "{!(JSINHTMLENCODE($User.FirstName))}"+" "+"{!(JSINHTMLENCODE($User.LastName))}",
                userId      : "{!$User.Id}",
                emailId     : "{!$User.Email}",
                profilePhoto : "{!(profilePhoto)}",
                userDisplayName : "{!(JSINHTMLENCODE(userDisplayName))}",
                gainsightTabs: fakeEval('{!JSINHTMLENCODE(gainsightTabs)}'),
                isLightningEnabled: {!(isLightningEnabled)}
            };
            GS.ctaSources      = {!(ctaSources)};
            GS.packageVersion  = "{!(packageVersion)}";

            window.GSPerformance.mark('apex_parsing_end');
            window.GSPerformance.measure("time_taken_by_sfdc_org", "apex_parsing_start", "apex_parsing_end");
             
            window.GSPerformance.mark('app_resource_start');
    </script>

    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSApp/cdnVersionResolver.js"  type="text/javascript"></script>

    <apex:outputpanel rendered="{!If(JSINHTMLENCODE($CurrentPage.parameters.env) == null , true, false)}">
        <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSApp/rulesManagerFeatureResolver.js"  type="text/javascript"></script>
    </apex:outputpanel>


    <apex:outputpanel rendered="{!If(JSINHTMLENCODE($CurrentPage.parameters.env) == "dev" , true, false)}">
        <apex:stylesheet value="{!IF(JSINHTMLENCODE($CurrentPage.parameters.apppath)!=null,JSINHTMLENCODE($CurrentPage.parameters.apppath),'https://localhost:8080/UI')}/rules/styles/rules.css" />
        <script type="text/javascript" src="{!IF(JSINHTMLENCODE($CurrentPage.parameters.apppath)!=null,JSINHTMLENCODE($CurrentPage.parameters.apppath), "https://localhost:8080/UI")}/rules/scripts/vendor.bundle.js"></script>
        <script type="text/javascript" src="{!IF(JSINHTMLENCODE($CurrentPage.parameters.apppath)!=null,JSINHTMLENCODE($CurrentPage.parameters.apppath), "https://localhost:8080/UI")}/rules/scripts/rules.bundle.js"></script>
    </apex:outputpanel>

    <apex:form ></apex:form>
    <div id="gs-app-container">
        <div class="gs-module-container">
            <div id="RulesMainCntr" class="RulesMainCntr">
            <div id="preloader-cntr">
                 <div class="preloader-wrapper small active">
                    <div class="spinner-layer spinner-blue-only">
                        <div class="circle-clipper left">
                            <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                            <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                            <div class="circle"></div>
                        </div>
                    </div>
                 </div>
             </div>
            </div>
        </div>
    </div>

    <script>
        window.GSPerformance.mark('ga_start');
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!(JSINHTMLENCODE($Organization.Name))}",
            userName: "{!(JSINHTMLENCODE($User.FirstName))}"+" "+"{!(JSINHTMLENCODE($User.LastName))}",
            userId: "{!$User.Id}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/CustomJS/CustomJS/analyticsWrapper.js"></script>
    <script>
        gainsightTrackEvents.pushPageViews('Rules Manager');
        window.GSPerformance.mark('ga_end');
        window.GSPerformance.measure('Google Analytics JS', 'ga_start', 'ga_end');
    </script>
</apex:page>