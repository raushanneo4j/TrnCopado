<apex:page controller="LeanData.Reporting_WizardController" extensions="LeanData.Reporting_Utility" sidebar="false" standardStylesheets="false" docType="html-5.0">
    <c:googleAnalytics analyticsCategory="Reporting" />
    <apex:stylesheet value="{!URLFOR($Resource.LeanData__magellan_app, 'css/magellan.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.LeanData__magellan_app, 'scss/magellan.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.LeanData__angela_app, 'styles.css')}"/> 
    <style>
        @font-face {
            font-family: 'Open Sans';
            src: url("{!URLFOR($Resource.LeanData__Libraries, 'fonts/OpenSans-Regular.ttf')}") format('truetype')
        }

        @font-face {
            font-family: 'Oswald';
            src: url("{!URLFOR($Resource.LeanData__Libraries, 'fonts/Oswald-VariableFont_wght.ttf')}") format('truetype')
        }
        .main-content {
          margin: 0px !important;
        }

        .noSidebarCell {
            padding: 0;
        }
        
        .bs {
            line-height: 1;
            font-family: 'Open Sans', sans-serif;
            font-weight: 400;
            font-size: 16px;
        }
        
        .bs .header {
            font-size: 19px;
            background-color: white;
            height: 55px;
            width: 100%;
        }

        .header-title {
            font-size: 21.5px;
            line-height: 55px;
            margin-left: 180px;
            float: left;
            position: absolute;
            color: var(--dk-grey-2);
        }
        
        .bs .logo {
            display: block;
            float: left;
            margin-top: 15px;
        }
        
        .bs .main-title {
            padding-top: 25px;
            font-size: 27px;
            letter-spacing: .05em;
            font-weight: 500;
        }
        
        .bs .darkBlueFont {
            color: #043e57;
        }
        
        .bs .navBar-panel {
            margin-top: 20px;
            font-family: 'Oswald';
            font-size: 11px;
            letter-spacing: 1px;
            cursor: pointer;
            float: left;
        }
        
        .bs .navBarStep {
            padding: 3px 8px;
            float: left;
            background: #ebeeef;
            width: 232px;
            color: #b3b3b3;
            line-height: 25px;
        }
        
        .bs .left_padding30 {
            padding-left: 30px;
        }
        
        .bs .left-margin20 {
            margin-left: 20px;
        }
        
        .arrow_box {
            position: relative;
        }
        
        .arrow_box:after,
        .arrow_box:before {
            left: 100%;
            top: 50%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }
        
        .arrow_box:after {
            border-color: rgba(136, 183, 213, 0);
            border-left-color: #ebeeef;
            border-width: 16px;
            margin-top: -16px;
            z-index: 1;
        }
        
        .arrow_box:before {
            border-color: rgba(255, 255, 255, 0);
            border-left-color: #ffffff;
            border-width: 19px;
            margin-top: -19px;
            z-index: 1;
        }
        
        .navBarStep:hover,
        .navBarStepVisited:hover {
            background: var(--ld-green) !important;
            position: relative;
            color: white;
        }
        
        .arrow_box:hover:after,
        .navBarStepActive:after {
            border-color: rgba(136, 183, 213, 0);
            border-left-color: var(--ld-green);
            border-width: 16px;
            margin-top: -16px;
            z-index: 1;
        }
        
        .arrow_box:hover:before {
            border-color: rgba(255, 255, 255, 0);
            border-left-color: #ffffff;
            border-width: 19px;
            margin-top: -19px;
            z-index: 1;
        }
        
        .navBarStepActive {
            background: var(--ld-green) !important;
            color: white !important;
        }
        
        .navBarStep:hover .stepCircle,
        .navBarStepActive .stepCircle,
        .navBarStepVisited .stepCircle {
            background: var(--white);
            color: var(--ld-green);
        }
        
        .navBarStepVisited {
            background: var(--ld-lt-green-2) !important;
            color: var(--white) !important;
        }
        
        .navBarStepVisited:after {
            border-color: rgba(136, 183, 213, 0);
            border-left-color: var(--ld-lt-green-2);
            border-width: 16px;
            margin-top: -16px;
            z-index: 1;
        }
        
        .stepCircle {
            border-radius: 50%;
            behavior: url(PIE.htc);
            width: 25px;
            height: 25px;
            background: var(--white);
            float: left;
            text-align: center;
            line-height: 25px;
            font-size: 18px;
            font-weight: normal;
            margin-right: 10px;
        }
        
        .section-content {
            padding-top: 10px;
        }
        
        .content-container {
            padding-top: 10px;
        }
        
        .content-header {
            background: var(--med-grey-2);
            color: white;
            font-size: 16px;
            letter-spacing: .05em;
            font-weight: 400;
            height: 42px;
            width: 100%;
            padding-left: 20px;
            line-height: 44px;
        }
        
        .content-panel {
            font-size: 20px;
            color: var(--dk-grey-2);
            padding: 20px;
            background: var(--lt-grey-1_5);
            font-weight: 100;
            text-align: center;
        }
        
        .layout-table td {
            vertical-align: top;
        }
        
        .campaign-date-div {
            width: 100%;
            text-align: left;
            margin-top: 15px;
            padding-left: 5px;
        }
        
        .date-input {
            padding: 3px 0px;
            background: white;
            color: #043e57;
            width: 176px;
            text-align: center;
        }
        
        .glyphicon-calendar {
            color: white;
            cursor: pointer;
        }
        
        .calendar-container {
            float: left;
            margin-left: 5px;
            width: 32px;
            height: 32px;
            text-align: center;
            line-height: 32px;
            background: #2bb897;
            cursor: pointer;
        }
        
        .calendar-container:hover {
            opacity: .5;
        }
        
        .select-grid {
            font-size: 12px;
            text-align: center;
            line-height: 53px;
            margin: 2px;
            float: left;
            width: 102px;
            height: 53px;
            background: var(--ld-red);
            color: #E9B4B6;
            cursor: pointer;
            transition: height 0.5s;
            /* Animation time */
            -webkit-transition: height 0.5s;
            /* For Safari */
            position: relative;
            overflow: hidden;
        }

        .select-grid:hover {
            border: 2px solid white;
        }

        .select-grid
        
        .select-grid-active .glyphicon-check {
            top: 3px !important;
            right: 3px !important;
        }
        
        .campaign-type-panel {
            width: 425px;
            max-height: 226px;
            overflow-x: hidden;
            overflow-y: auto;
            margin: 10px auto 0 0;
        }
        
        .select-grid-active {
            background: var(--ld-green);
            position: relative;
            color: var(--white) !important;
            border: none;
        }

        .red-background {
            background: var(--ld-red);
        }

        .light-green-1-background {
            background: var(--ld-lt-green-1);
            color: var(--med-grey-2) !important;
        }
        
        . .select-grid:hover {
            opacity: .5;
        }
        
        .bs::-webkit-scrollbar {
            width: 7px;
        }
        
        .bs::-webkit-scrollbar-track {
            background-color: #d7d7d7;
        }
        
        .bs::-webkit-scrollbar-thumb {
            background-color: #7d7d7d;
        }
        
        .bs::-webkit-scrollbar-thumb:hover {
            background-color: #aaa;
        }
        
        .bs .date-select {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            background: url("{!URLFOR($Resource.LeanData__images, 'down_arrow_outline_blue.png')}") no-repeat scroll 90% center / 15px auto #ffffff !important;
            text-overflow: "";
            cursor: pointer;
            width: 100px;
            display: inline-block;
            letter-spacing: 0;
            background-size: 15px auto;
        }
        
        .schedule-input {
            padding: 5px !important;
            text-align: center !important;
            cursor: pointer;
            pointer-events: auto;
            font-size: 16px !important;
            background: white;
        }
        
        .bs .modal-backdrop {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1040;
            background-color: #000;
        }
        
        .bs .modal-backdrop.fade {
            filter: alpha(opacity=0);
            opacity: 0;
        }
        
        .bs .modal-backdrop.in {
            filter: alpha(opacity=50);
            opacity: .5;
        }
        
        .bs .close {
            background: none;
            border: none;
            opacity: 1;
            color: #6ab4c9;
            font-size: 32px;
        }
        
        .bs .modal-header .close {
            margin-top: -16px;
            margin-right: -12px;
        }
        
        .bs .modal-body {
            text-align: center;
            font-weight: 300;
            line-height: 24px;
        }
        
        .bs .lean {
            font-size: 14px !important;
        }
        
        .bs .modal-body h2 {
            color: #005980;
            font-size: 18px;
            font-family: 'Open Sans', sans-serif;
            font-weight: 600;
            margin-top: -10px;
            margin-bottom: 17px;
        }
        
        .bs .modal-body p {
            font-size: 16px;
            color: #666666;
            font-family: 'Open Sans', sans-serif;
            line-height: 20px;
            margin-bottom: 28px;
        }
        
        .bs .modal-dialog {
            margin: 100px auto;
        }
        
        .bs .modal-backdrop {
            opacity: 0.34 !important;
        }
        
        .bs .tooltip .tooltip-inner {
            color: black;
            background-color: white;
            text-align: left;
        }
        
        .bs .tooltip.top .tooltip-arrow {
            border-top-color: #1b527e;
        }
        
        .ui-datepicker {
            border-radius: 0 !important;
        }
        
        .infoPanel {
            font-size: 14px;
            background: var(--lt-grey-2);
            padding: 20px 30px;
            margin-top: 10px;
            margin-bottom: 10px;
            text-align: left;
        }
        
        .selectAllCheckBox,
        .includeBlankStartDatesCheckbox,
        .includeInactiveOppStagesCheckbox,
        .includeInactiveCampaignTypesCheckbox,
        .runReportCheckbox {
            width: 25px;
            height: 25px;
            cursor: pointer;
            margin-left: -28px !important;
            margin-top: -1px !important;
            position: absolute;
            opacity: 0.0;
        }
        
        .showingCampaignsLabel {
            font-weight: normal !important;
            font-size: 12px;
            color: gray;
        }
        
        .pagination-standard {
            font-size: 10pt;
            cursor: pointer;
            color: #1b527e;
        }
        
        .pagination-active-page {
            color: #6bd3bb;
            text-decoration: underline;
        }
        
        .pagination-standard:hover {
            color: #6bd3bb;
        }
        
        .pagination-dots {
            font-size: 12px;
            cursor: default;
        }
        
        .pagination-dots:hover {
            color: #043e57;
        }
        
        .searchBox {
            height: 12px;
            width: 120px;
            font-size: 12px !important;
            border: none;
        }
        
        .searchBox:focus {
            border: none;
        }

        .navButtons {
            margin-top:521px;
            margin-left: 400px;
            clear:both;
            z-index:2;
        }

        .partial-selection-background {
            background: var(--ld-lt-green-1);
            color: var(--med-grey-2) !important;
        }

        .settingsLinkLabel {
            display:block;
            width: 150px;
            float:left;
            text-align:center;
            cursor: pointer;
            text-decoration: underline;
            color: var(--med-grey-2);
            text-align: right;
        }

        .settingsLinkLabel:hover {
            opacity: 0.5;
        }
        
        textarea,
        input,
        textarea:focus,
        input:focus {
            outline: 0;
            color: #043e57 !important;
        }
        
        .campaignsTopBlock {
            width: 100%;
            text-align: left;
            font-size: 14px;
            color: #043e57;
            padding-bottom: 8px;
        }
        
        .campaignsFilterSort > div {
            padding: 0 10px 0 5px;
        }
        
        .campaignsLoading {
            padding-left: 400px;
            display: none;
            width: 100%;
            margin-top: 100px;
            height: 200px;
        }
        
        .campaignsTopBlock:after {
            content: '';
            display: block;
            clear: both;
        }
        
        .campaignsSelected {
            margin-right: 15px;
            margin-left: 30px;
            font-size: 12px;
            font-weight: normal !important;
        }
        
        .loading {
            position: fixed;
            z-index: 999;
            height: 2em;
            width: 2em;
            overflow: show;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }
        /* Transparent Overlay */
        
        .loading:before {
            content: '';
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.3);
        }
        /* :not(:required) hides these rules from IE9 and below */
        
        .loading:not(:required) {
            /* hide "loading..." text */
            font: 0/0 a;
            color: transparent;
            text-shadow: none;
            background-color: transparent;
            border: 0;
        }
        
        .loading:not(:required):after {
            content: '';
            display: block;
            font-size: 10px;
            width: 1em;
            height: 1em;
            margin-top: -0.5em;
            -webkit-animation: spinner 1500ms infinite linear;
            -moz-animation: spinner 1500ms infinite linear;
            -ms-animation: spinner 1500ms infinite linear;
            -o-animation: spinner 1500ms infinite linear;
            animation: spinner 1500ms infinite linear;
            border-radius: 0.5em;
            -webkit-box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.5) -1.5em 0 0 0, rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;
            box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) -1.5em 0 0 0, rgba(0, 0, 0, 0.75) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;
        }
        /* Animation */
        
        @-webkit-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        
        @-moz-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        
        @-o-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        
        @keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }
            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
        
        .bs .left-sidebar {
            display:none;
        }

        .bs .campaign-tooltip{
            display:none;
            width: 200px;
            background-color: black;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px 0;
            /* Position the tooltip */
            position: absolute;
            z-index: 1;
        }

        .bs .eligCampaign:hover + div {
            display: inline-block;
        }

        .select-grid-overflow{
            padding: 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            max-width: 100%;
            -webkit-transition: height 0.5s;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 2;
            word-wrap: break-word;
        }
        
        .select-grid-overflow:hover {
            padding: 10px 8px 10px 8px;
        }

        .bs label {
            font-weight: normal;
        }
        .bs .CMButton{
            width: max-content; 
            width: intrinsic;
            width: -moz-max-content;
        }
        
        .toggleText {
            color: var(--dk-grey-2);
        }

        .textAlignLeft {
            text-align: left;
        }

        .inactive-campaign-types {
            margin-top:10px !important;
            margin-left:0px !important;
        }

        .campaignsHeader {
            width:100%;
            text-align: left;
            margin-bottom:10px;
        }

        .include-inactive-opp-stages {
            margin-top: 10px;
            margin-bottom: 10px;
            text-align: left;
        }

        .clearSearchBoxText {
            position:absolute;
            display:block;
            top:0px;
            right:15px;
            cursor:pointer;
        }
        
        .modal-oppFreeze {
            width: 532px !important;
            height: unset;
        }
    
        .modal-oppFreeze .modal-body {
            padding: 20px 20px 30px;
        }

        .modal-oppFreeze .modal-body b {
            font-size: 14px;
            color: var(--dk-grey-2);
        }

        .modal-oppFreeze .modal-body p {
            text-align: left !important;
            font-size: 14px !important;
            font-weight: 400;
            color: var(--dk-grey-2) !important;
        }

        .modal-oppFreeze .modal-header-oppFreeze {
            height: unset !important;
            display: block !important;
            justify-content: left !important;
            padding: 15px 20px 15px;

        }

        .modal-oppFreeze .modal-header-oppFreeze b {
            font-size: 19px;
            color: var(--dk-grey-2);
        }

        .modal-oppFreeze .close img {
            height: 16px;
        }

        .modal-oppFreeze .modal-note {
            background-color: #fff9e6;
            padding: 15px !important;
            text-align: left !important;
        }

        .m0 {
            margin: 0 !important;
        }

        .mt20 {
            margin-top: 20px !important;
        }

        .ml0, .mr0 {
            margin-bottom: 0 !important;
        }

        .mlr10 {
            margin: 0 10px !important;
        }

        .mb0 {
            margin-bottom: 0 !important;
        }

        .mb15 {
            margin-bottom: 15px !important;
        }

        .mb50 {
            margin-bottom: 50px !important;
        }

        .highlight-invalid-input {
          border: 1px solid var(--ld-red);
        }

        .tool-tip-container {
            display: inline-block;
        }

        .tool-tip-container #tool-tip-text {
            visibility: hidden;
            width: 500px;
            background-color: var(--white);
            border: 1px solid var(--lt-grey-2);
            position: absolute;
            z-index: 1;
            padding: 10px;
            font-weight: var(--regular);
            border-radius: 3px;
            margin-left: 5px;
        }

        .tool-tip-container:hover #tool-tip-text {
            visibility: visible;
        }

        .tool-tip-container #tool-tip-text p {
          margin-bottom: 5px;
        }

        .info-icon {
            height: 18px;
            width: 18px;
        }

    </style>
    <!-- Bootstrap Core CSS -->
    <apex:stylesheet value="{!URLFOR($Resource.LeanData__bootstrap_v3_3_4, 'css/bootstrap.css')}" />
    <!-- Custom CSS -->
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
    <!-- jQuery Version 3.5.1 -->
    <apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'jquery-3.5.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'jquery-ui-1.12.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'popper-1.16.1.min.js')}" />
    <!-- Bootstrap Core JavaScript -->
    <apex:includeScript value="{!URLFOR($Resource.LeanData__Libraries, 'bootstrap-4.5.3.min.js')}" />
    <apex:composition template="LeanData__Reporting_Template">
        <apex:define name="mainContent">
                    <div class="dg_inner-wrapper">
                        <div class="ld-subheader" style="text-align:center">
                            Attribution Wizard
                        </div>
                        <div class="dg_inner-wrapper-content">
                            <apex:outputPanel layout="block">
                                <script>
                                    function successMessage() {
                                        j$('.loading').css("display", "none");
                                        displaySuccessModal();
                                    }
                                </script>
                                <apex:actionFunction name="initializeSelectorsAF" action="{!initializeSelectors}" rerender="pm,campaignSelectionPanel,campaignMemberStatusPanel, leadStatusPanel,opportunityStagePanel,opportunityTypePanel,campaignTypePanel" onComplete="bindJS();" status="loading" />
                                <apex:actionFunction name="toggleInactiveOppStageAF" action="{!initializeOpportunityStageSelector}" oncomplete="bindJS();" rerender="opportunityStagePanel" status="loading">
                                    <apex:param value="" name="allowInactiveOppStage" assignTo="{!includeInactiveOppStage}"/>
                                </apex:actionFunction>
                                <apex:actionFunction name="toggleInactiveCampaignTypeAF" action="{!initializeCampaignTypeSelector}" oncomplete="bindJS();" rerender="campaignTypePanel" status="loading">
                                    <apex:param value="" name="allowInactiveCampaignType" assignTo="{!includeInactiveCampaignType}"/>
                                </apex:actionFunction>
                                <apex:actionFunction name="populateBulkSettings" action="{!initializeSelectors}" rerender="pm,campaignMemberStatusPanel, leadStatusPanel,opportunityStagePanel,opportunityTypePanel,campaignTypePanel" onComplete="bindJS();" status="loading" />
                                <apex:actionFunction name="step4AF" rerender="pm,opportunityStagePanel,opportunityTypePanel,oppDateRangePanel" onComplete="bindJS();" status="loading" />
                                <apex:actionFunction name="bindJSActionFunction" rerender="pm" onComplete="bindJS();" />
                                <apex:actionFunction name="setCampaignStartDateAF" rerender="x">
                                    <apex:param value="" name="sd" assignTo="{!campaignStartDateString}" />
                                </apex:actionFunction>
                                <apex:actionFunction name="setOppCreateDateAF" rerender="x">
                                    <apex:param value="" name="ocd" assignTo="{!opportunityCreateDateString}" />
                                </apex:actionFunction>
                                <apex:actionFunction name="saveBulkSettingsAF" action="{!saveBulkSettings}" rerender="x" onComplete="successMessage();" />
                                
                                <apex:actionFunction action="{!initializeCMS}" name="initializeCMSAF" rerender="campaignMemberStatusPanel" oncomplete="bindJSActionFunction();" status="loading">
                                    <apex:param name="firstParam" assignTo="{!cmsByTypeSelectorJSON}" value="" />
                                </apex:actionFunction>
                                
                                <apex:actionStatus id="loading" onstart="loading(true)" onstop="loading(false)" />
                                <apex:actionStatus id="loadingCampaignNames" onstart="loadingCampaignNames(true)" onstop="loadingCampaignNames(false)" />
                                
                                <div class="loading" style="display:none">Loading&#8230;</div>
                                <apex:outputPanel layout="block" styleClass="page-container">
                                    
                                    <div>
                                        <div class="customHeaderContent-right">
                                            <span id="generate_csv_button" class="settingsLinkLabel" style="display:block;width: 150px;float:left;text-align:center;cursor: pointer;text-decoration: underline;color: var(--ld-green);text-align: right;" onclick="generateCsv();"> Download CSV</span> 
                                        </div>
                                        <section class="section-2">
                                            <div class="navBar-panel">
                                                <div class="navBarStep navBarStep-1 arrow_box" onClick="goToStep(1);">
                                                    <div class="stepCircle">1</div> CAMPAIGN TYPES</div>
                                                <div class="navBarStep navBarStep-2 arrow_box left_padding30" onClick="goToStep(2);">
                                                    <div class="stepCircle">2</div>CAMPAIGNS</div>
                                                <div class="navBarStep navBarStep-3 arrow_box left_padding30" onClick="goToStep(3);">
                                                    <div class="stepCircle">3</div>CAMPAIGN MEMBERS</div>
                                                <div class="navBarStep navBarStep-4 left_padding30" onClick="goToStep(4);">
                                                    <div class="stepCircle">4</div>OPPORTUNITIES</div>
                                            </div>
                                        </section>
                                        <div style="clear:both;" />
                                        <div class="content-wrapper" style="height:550px; width: 1044px;">
                                            <table>
                                                <tr>
                                                    <td>
                                                        <section class="section-step1 section-content" style="position: absolute; ">
                                                            <table class="layout-table">
                                                                <tr>
                                                                    <td>
                                                                        <div class="content-container" style="width: 430px;">
                                                                            <div class="content-header">
                                                                                CAMPAIGN START DATE
                                                                            </div>
                                                                            <div class="content-panel" style="height: 200px;text-align:left;">
                                                                                <h4>Select a campaign start date. Alternatively, leave blank to include all campaigns.</h4>
                                                                                <div class="campaign-date-div">
                                                                                    <input style="height:0px; top:-1000px; position:absolute" type="text" value="" />
                                                                                    <input placeholder="mm/dd/yyyy" id="startDate" class="date-picker date-input" style="float:left;" onChange="setCampaignStartDate(this);" />
                                                                                </div>
                                                                                <br/>
                                                                                <br/>
                                                                                <br/>
                                                                                <label class="cb-container-small">
                                                                                  <span class="toggleText" style="font-size:16px;position:relative;bottom:2px">Include Campaigns with blank start date</span>
                                                                                  <input type="checkbox" id="includeBlankStartDatesCheckbox"/>
                                                                                  <span class="checkmark"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="content-container" style="width: 500px; padding-left:10px;">
                                                                            <div class="content-header">
                                                                                CAMPAIGN TYPE
                                                                            </div>
                                                                            <apex:outputPanel layout="block" id="campaignTypePanel" styleClass="content-panel textAlignLeft">
                                                                                <h4>Select which <b>Campaign Types</b> to exclude.</h4>
                                                                                <br/>
                                                                                <label class="cb-container-small inactive-campaign-types">
                                                                                <span class="toggleText">Include Inactive Campaign Types</span>
                                                                                <input type="checkbox" id="includeInactiveCampaignTypesCheckbox" onClick="toggleInactiveCampaignType(this)"/>
                                                                                <span class="checkmark"></span>
                                                                                </label>
                                                                                <br/>
                                                                                <div class="campaign-type-panel">
                                                                                    <apex:repeat value="{!campaignTypeSelector}" var="CT" first="">
                                                                                        <div class="{!IF(CT.isSelected == true,'select-grid-active' ,'')} select-grid select-grid-overflow" style="line-height: 1.6;" data-label="{!CT.selectorLabel}" id="{!CT.selectorAPIName}" data-toggle="tooltip"> {!CT.selectorLabel}
                                                                                            <apex:inputCheckbox value="{!CT.isSelected}" style="visibility:hidden;position:absolute;" /><i class="glyphicon glyphicon-check" style="position:absolute;visibility:hidden; color: white;" /> </div>
                                                                                    </apex:repeat>
                                                                                </div>  
                                                                                <script type="text/javascript">
                                                                                    var includeInactiveCampaignType = {!includeInactiveCampaignType};
                                                                                </script>
                                                                            </apex:outputPanel>
                                                                        </div>

                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </section>
                                                    </td>
                                                    <td>
                                                        <section class="section-step2 section-content" style="position: absolute; display:none;">
                                                            <div class="content-container" style="width: 930px;">
                                                                <div class="content-header">
                                                                    CAMPAIGN NAMES
                                                                </div>
                                                                <apex:outputPanel layout="block" id="campaignSelectionPanel" styleClass="content-panel" style="width:100%; padding:20px; padding-bottom:10px; height: 445px; overflow:auto;">
                                                                    <apex:outputPanel layout="block" style="height: 390px;">
                                                                        <div class="campaignsHeader"><h4>Select which eligible <b>Campaigns</b> to exclude.</h4></div>
                                                                        <div class="campaignsTopBlock">
                                                                            <div class="campaignsFilterSort">
                                                                                <div style="float:left; position:relative; top: 6px; padding-left: 0px;">
                                                                                    <label class="cb-container-small">
                                                                                      <span class="toggleText">Select All</span>
                                                                                      <input type="checkbox" id="selectAllCheckBox" onClick="toggleSelectedCampaigns(this)"/>
                                                                                      <span class="checkmark"></span>
                                                                                    </label>
                                                                                </div>
                                                                                <div class="dg_styled-select" style="float:left;background-position: right 10px top 10px;">
                                                                                    <select id="sortCampaignSelect" onchange="sortCampaigns(this.value);" style="outline: none;height: 25px">
                                                                                        <option value="nameAsc" selected="selected">Name (Ascending)</option>
                                                                                        <option value="nameDsc">Name (Descending)</option>
                                                                                        <option value="startDateAsc">Start Date (Old to New)</option>
                                                                                        <option value="startDateDsc">Start Date (New to Old)</option>
                                                                                    </select>
                                                                                </div>
                                                                                <div style="float:right; position:relative">
                                                                                    <div style="background: url({!URLFOR($Resource.DashboardImages, 'Search_Icon_2.png')}) no-repeat 10px;background-size: 15px 15px; background-color:var(--white);line-height:22px;margin-left:30px;height:25px">
                                                                                        <input type="text" placeholder="Search Campaigns" class="searchBox" style="margin-top:4px;margin-left:30px;margin-right:20px;" id="searchBox" onkeyup="filterCampaigns();" />
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div style="clear:both" />
                                                                            <apex:outputPanel styleClass="noEligibleCampaigns" layout="block" style="display:none;height: 350px;padding-top:40px">
                                                                                <div class="campaignsHeader"> <b>No Eligible Campaigns that fit the criteria.</b></div>
                                                                            </apex:outputPanel>
                                                                            <div class="campaignsLoading">
                                                                                <img src="/img/loading.gif" style="margin-top: 20px; margin-left: 20px;" />
                                                                            </div>
                                                                            <div class="campaignResults" style="margin-top:20px">
                                                                                <div class="campaignDisabledText"></div>
                                                                                <apex:outputPanel id="showBulkCampaigns" layout="block" style="height:335px">
                                                                                    <div class="campaignResultsJS">
                                                                                    </div>
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="pagination">
                                                                                    <div style="float:left">
                                                                                        <span style="font-size:14px">Showing campaigns: </span>
                                                                                        <span class="showingCampaignsLabel"/>
                                                                                    </div>
                                                                                    <div class="paginationParent" style="float:right;margin-right:15px;">
                                                                                    </div>
                                                                                </apex:outputPanel>
                                                                            </div>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </div>
                                                        </section>
                                                    </td>
                                                    <td>
                                                        <section class="section-step3 section-content" style="position: absolute; display:none;">
                                                            <table class="layout-table">
                                                                <tr>
                                                                    <td>
                                                                        <div class="content-container" style="width: 645px;">
                                                                            <div class="content-header">
                                                                                CAMPAIGN MEMBER STATUS
                                                                            </div>
                                                                            <apex:outputPanel layout="block" id="campaignMemberStatusPanel" styleClass="content-panel" style="width:645px; padding: 10px 20px; height: 350px; overflow:auto;">
                                                                                <div class="campaignsHeader"><h4>Select which <b>Campaign Member Statuses</b> to exclude.</h4></div>
                                                                                <apex:outputPanel rendered="{!campaignMemberStatusSelector == null}" style="width:100%;" layout="block">
                                                                                    <img src="/img/loading.gif" style="margin-top: 20px; margin-left: 20px;" />
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="showCampaignMemberStatus" rendered="{!campaignMemberStatusSelector != null}" style="height: 330px; overflow:auto;" layout="block">
                                                                                    <apex:repeat value="{!campaignMemberStatusSelector}" var="CMSOuter">
                                                                                        <apex:repeat value="{!CMSOuter}" var="CMS">
                                                                                            <div style="width:268px;height:33px;line-height:33px;" class="{!IF(CMS.isSelected == true,'select-grid-active' ,'')} select-grid" id="{!CMS.selectorAPIName}" name="{!CMS.selectorAPIName}">{!CMS.selectorLabel}
                                                                                                <a class="showCampaignTypeSpecificExclusion" style="color:white;float:right;font-weight:normal;margin-right:8px;font-size:15px;"><i class="glyphicon glyphicon-chevron-right" /></a>
                                                                                                <apex:inputCheckbox value="{!CMS.isSelected}" style="visibility:hidden;position:absolute;" /><i class="glyphicon glyphicon-check" style="position:absolute;visibility:hidden; color: white;" /> </div>
                                                                                            <div class="content-container campaignTypeExclusionFor{! SUBSTITUTE(CMS.selectorLabel,' ','$$$')} CampaignTypeSpecificExclusionPanel" style="padding-top:0px;display:none;position:absolute; z-index:2; width: 260px;border:1px solid #b3b3b3;">
                                                                                                <a onClick="j$('.CampaignTypeSpecificExclusionPanel').hide();" style="float:right;margin-top:5px;margin-right:5px;cursor:pointer;color:white;font-weight:bold;font-size:10px;"> X </a>
                                                                                                <div class="content-header" style="width:100%; text-align:center;padding:0;">
                                                                                                    CAMPAIGN TYPES
                                                                                                </div>
                                                                                                <div class="content-panel getCampaignType" id="{!CMS.selectorAPIName}Content" name="{!CMS.selectorAPIName}Content" data-name="{!CMS.selectorAPIName}Content" style="height:200px; overflow:auto;">
                                                                                                </div>
                                                                                            </div>
                                                                                        </apex:repeat>
                                                                                    </apex:repeat>
                                                                                    <script type="javascript">
                                                                                               getCMSWithCampaignTypeValue();
                                                                                    </script>
                                                                                </apex:outputPanel>
                                                                            </apex:outputPanel>
                                                                            <div style="display: flex; align-items: center; margin-top: 20px">
                                                                              <div>
                                                                                <div class="ld-primary-large-button CMButton navButton-light" onclick="showResetConfirmation();">Reset To Responded Status</div>
                                                                              </div>
                                                                              <div class="tool-tip-container">
                                                                                <img src="{!URLFOR($Resource.Reporting_Images, 'Info_Button_Icon.png')}" class="info-icon"/>
                                                                                <span id="tool-tip-text">
                                                                                  <p>
                                                                                    When 'Reset To Responded Status' has been selected, Campaign Types and Campaign Member Statuses will be included within your Attribution run where at least one of the Campaign Member Statuses within the type has been designated as a 'Responded' status within Salesforce Campaign. 
                                                                                  </p>
                                                                                  <p>
                                                                                    For example, if there are two webinars: Webinar 1 &amp; Webinar 2 with the status Attended and only Webinar 1’s Attended status is designated as 'Responded', then selecting LeanData’s 'Reset To Responded Status' will include Campaign Members from Webinar 1 who Attended and Campaign Members from Webinar 2 who Attended.
                                                                                  </p>
                                                                                </span>
                                                                              </div>
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="content-container" style="width: 285px; padding-left:10px;">
                                                                            <div class="content-header">
                                                                                LEAD STATUS
                                                                            </div>
                                                                            <apex:outputPanel layout="block" id="leadStatusPanel" styleClass="content-panel" style="width:100%; padding: 10px 20px; height: 350px; overflow:auto;">
                                                                                <div class="campaignsHeader"><h4>Select which <b>Lead Statuses</b> to exclude.</h4></div>
                                                                                <apex:outputPanel rendered="{!leadStatusSelector == null}" style="width:100%;" layout="block">
                                                                                    <img src="/img/loading.gif" style="margin-top: 20px; margin-left: 20px;" />
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="showLeadStatus" rendered="{!leadStatusSelector != null}" style="width:100%;text-align:center;height: 330px; overflow-y:auto;" layout="block">
                                                                                    <apex:repeat value="{!leadStatusSelector}" var="LS">
                                                                                        <div style="width:215px;height:33px;line-height:33px;" class="{!IF(LS.isSelected == true,'select-grid-active' ,'')} select-grid" id="{!LS.obj['MasterLabel']}">{!LS.obj['MasterLabel']}
                                                                                            <apex:inputCheckbox value="{!LS.isSelected}" style="visibility:hidden;position:absolute;" /><i class="glyphicon glyphicon-check" style="position:absolute;visibility:hidden; color: white;" /> </div>
                                                                                    </apex:repeat>
                                                                                </apex:outputPanel>
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </section>
                                                    </td>
                                                    <td>
                                                        <section class="section-step4 section-content" style="position: absolute; display:none;">
                                                            <table class="layout-table">
                                                                <tr>
                                                                    <div class="content-container" style="width: 930px;">
                                                                        <div class="content-header">
                                                                            RELEVANT TIME FRAME
                                                                        </div>
                                                                        
                                                                        <apex:outputPanel id="oppDateRangePanel" styleClass="content-panel" style="padding: 10px; text-align: left;font-size:14px;" layout="block">
                                                                            <b>Opportunities</b>
                                                                                <div class="opp-create-date-div" >
                                                                                    &nbsp;&nbsp;Include Opportunities created after
                                                                                    <input style="height:0px; top:-1000px; position:absolute" type="text" value="" />
                                                                                    <input placeholder="mm/dd/yyyy" id="oppCreateDate" class="date-picker date-input" onChange="setOppCreateDate(this);" style="width:100px;" />
                                                                                </div>
                                                                            <br/>
                                                                            <b>Marketing Touches</b>
                                                                            <br/>
                                                                            &nbsp;&nbsp;Include marketing touches that occurred
                                                                            <apex:inputText html-class="relevantPriorDayRange" onchange="validateRelevantPriorDayRange()" value="{!relevantPriorDayRange}" style="width:50px;margin:5px;text-align:center;" />days before an opportunity was created.
                                                                        </apex:outputPanel>
                                                                    </div>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        <div class="content-container" style="width: 465px; padding-right:10px;">
                                                                            <div class="content-header">
                                                                                OPPORTUNITY TYPES
                                                                            </div>
                                                                            <apex:outputPanel layout="block" id="opportunityTypePanel" styleClass="content-panel" style="width:100%; padding: 10px 20px; height: 250px; overflow:auto;">
                                                                                <apex:outputPanel rendered="{!opportunityTypeSelector == null}" style="width:100%;" layout="block">
                                                                                    <img src="/img/loading.gif" style="margin-top: 20px; margin-left: 20px;" />
                                                                                </apex:outputPanel>
                                                                                <div class="campaignsHeader"><h4>Select which <b>Opportunity Types</b> to exclude.</h4></div>
                                                                                <apex:outputPanel StyleClass="infoPanel" layout="block" rendered="{!hasCustomOppTypes==true}">
                                                                                    <b>NOTE: </b> You have selected a custom Opportunity Type field so exclusions must be done from the Custom Filters page.
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="showOpportunityType" rendered="{!opportunityTypeSelector != null}" style="overflow-y:auto; overflow-x:hidden;" layout="block">
                                                                                    <apex:repeat value="{!opportunityTypeSelector}" var="OT">
                                                                                        <div style="width:405px;height:33px;line-height:33px;" class="{!IF(OT.isSelected == true,'select-grid-active' ,'')} select-grid" id="{!OT.selectorAPIName}">{!OT.selectorLabel}
                                                                                            <apex:inputCheckbox value="{!OT.isSelected}" style="visibility:hidden;position:absolute;" /><i class="glyphicon glyphicon-check" style="position:absolute;visibility:hidden; color: white;" /> </div>
                                                                                    </apex:repeat>
                                                                                </apex:outputPanel>
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="content-container" style="width: 465px;">
                                                                            <div class="content-header">
                                                                                OPPORTUNITY STAGE
                                                                            </div>
                                                                            <apex:outputPanel layout="block" id="opportunityStagePanel" styleClass="content-panel" style="width:100%; padding: 10px 20px; height: 250px; overflow-y:scroll;">
                                                                                <apex:outputPanel rendered="{!opportunityStageSelector == null}" style="width:100%;" layout="block">
                                                                                    <img src="/img/loading.gif" style="margin-top: 20px; margin-left: 20px;" />
                                                                                </apex:outputPanel>
                                                                                <div class="campaignsHeader"><h4>Select which <b>Opportunity Stages</b> to exclude.</h4></div>
                                                                                <div class="include-inactive-opp-stages">
                                                                                    <label class="cb-container-small">
                                                                                    <span class="toggleText">Include Inactive Opportunity Stages</span>
                                                                                    <input type="checkbox" id="includeInactiveOppStagesCheckbox" onClick="toggleInactiveOppStage(this)"/>
                                                                                    <span class="checkmark"></span>
                                                                                    </label>
                                                                                </div>
                                                                                <script type="text/javascript">
                                                                                    var includeInactiveOppStage = {!includeInactiveOppStage};
                                                                                </script>
                                                                                <apex:outputPanel id="showOpportunityStage" rendered="{!opportunityStageSelector != null}" layout="block">
                                                                                    <apex:repeat value="{!opportunityStageSelector}" var="OS">
                                                                                        <div style="width:398px;height:33px;line-height:33px;" class="{!IF(OS.isSelected == true,'select-grid-active' ,'')} select-grid" id="{!OS.OS.MasterLabel}">{!OS.OS.MasterLabel} {!IF(OS.OS.isActive == true,'' ,'(Inactive)')}
                                                                                            <apex:inputCheckbox value="{!OS.isSelected}" style="visibility:hidden;position:absolute;" /><i class="glyphicon glyphicon-check" style="position:absolute;visibility:hidden; color: white;" /> </div>
                                                                                    </apex:repeat>
                                                                                </apex:outputPanel>
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </section>
                                                    </td>
                                                </tr>
                                            </table>
                                            <div id="contentLoading" class="contentLoading" style=" margin-left: 400px;position:absolute;display:none;margin-top:200px;">
                                                <div style="text-align: center;">
                                                    <img src="/img/loading.gif" alt="Loading graphic" />
                                                </div>
                                            </div>
                                            <div class="navButtons" style="margin-top:530px; margin-left: 400px; clear:both; z-index:2;">
                                                <div class="previous-step ld-tertiary-large-button "> Back </div>
                                                <div class="next-step ld-primary-large-button" style="margin-left:5px;"> Next </div>
                                                <div onClick="validateAndSaveSettings();" rerender="x, msgs" style="display:none;" id="saveSettings" value="Save Wizard" class="ld-primary-large-button saveSettingsButton">Save Wizard</div>
                                            </div>
                                        </div>
                                    </div>
                                </apex:outputPanel>
                                <!-- Success Modal -->
                                <div class="modal fade myModal2" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><img src="{!URLFOR($Resource.CampaignInfluenceWizardResources, 'images/close.png')}" alt="Close" /></button>
                                            </div>
                                            <div class="modal-body">
                                                <h2>Thank you!</h2>
                                                <p>Your campaign influence settings has been
                                                    <br />successfully saved.</p>
                                                <p class="lean">The LeanData Team</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- Error Modal -->
                                <div class="modal fade invalidInputModal" id="invalidInputModal" tabindex="-1" role="dialog" aria-labelledby="invalidInputModalLabel" aria-hidden="true">
                                  <div class="modal-dialog">
                                      <div class="modal-content">
                                          <div class="modal-header">
                                              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><img src="{!URLFOR($Resource.CampaignInfluenceWizardResources, 'images/close.png')}" alt="Close" /></button>
                                          </div>
                                          <div class="modal-body">
                                              <h2>Invalid Marketing Touch Time Frame Entry</h2>
                                              <p>Please enter a valid number of days in the 
                                                  <br />Marketing Touch Time Frame section before 
                                                  <br/>attemping to save again.</p>
                                          </div>
                                      </div>
                                  </div>
                                </div>
                                <!-- OppFreeze Modal -->
                                <div class="modal fade oppFreezeModal" id="oppFreezeModal" tabindex="-1" role="dialog" aria-labelledby="oppFreezeModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content modal-oppFreeze">
                                            <div class="modal-header modal-header-oppFreeze">
                                                <b>Wizard Settings Saved</b>
                                                <button aria-label="Close" class="close" data-dismiss="modal" type="button"><img src="{!URLFOR($Resource.magellan_app, 'images/Close_Icon.png')}" alt="Close" /></button>
                                            </div>
                                            <div>
                                                <hr class="mlr10" />
                                            </div>
                                            <div class="modal-body">
                                                <div class="modal-note">
                                                    <div class="mb15">
                                                        <b>Note: Opportunity Freeze is turned ON</b>
                                                    </div>
                                                    <div class="mb0">
                                                        <p class="m0">If you would like a completely refreshed dataset, turn Opportunity<br/> Freeze OFF and run Attribution.</p>
                                                    </div>
                                                </div>
                                                <p class="mt20 ml0 mr0 mb50">Your new settings have been saved successfully.</p>
                                                
                                                <div aria-label="Close" class="ld-primary-large-button saveSettingsButton" data-dismiss="modal">Okay</div> 
                                                <div class="ld-primary-large-button saveSettingsButton"><a href="/apex/{!namespace}Dashboard#attribution/advanced_settings/opportunity_freeze" style="color: inherit; text-decoration: none" target="_blank">Modify Opportunity Freeze</a></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="modalDiv"></div>
                            </apex:outputPanel>
                        </div>
                    </div>
        </apex:define>
    </apex:composition>
    <c:ModalJS />
    <!-- JavaScript -->
    <script>
        if({!isProductionOrg}) {
          (function(apiKey) {
              (function(p, e, n, d, o) {
                  var v, w, x, y, z;
                  o = p[d] = p[d] || {};
                  o._q = [];
                  v = ['initialize', 'identify', 'updateOptions', 'pageLoad'];
                  for (w = 0, x = v.length; w < x; ++w)(function(m) {
                      o[m] = o[m] || function() {
                          o._q[m === v[0] ? 'unshift' : 'push']([m].concat([].slice.call(arguments, 0)));
                      };
                  })(v[w]);
                  y = e.createElement(n);
                  y.async = !0;
                  y.src = 'https://cdn.pendo.io/agent/static/' + apiKey + '/pendo.js';
                  z = e.getElementsByTagName(n)[0];
                  z.parentNode.insertBefore(y, z);
              })(window, document, 'script', 'pendo');
          })('7e7cd4b3-14da-445e-7723-b673afae6f3c');

          pendo.initialize({
              visitor: {
                  id: '{!JSENCODE(userId)}', // Salesforce User Id
                  userProfile: '{!JSENCODE(userProfile)}', //Salesforce User Profile
                  userRole: '{!JSENCODE(userRole)}' //Salesforce User Role
              },
              account: {
                  id: '{!JSENCODE(orgId)}' // Salesforce Org Id
              }
          });
        }

        var SELECT_GRID_ACTIVE_CLASS = "select-grid-active";
        j$('[data-toggle="tooltip"]').tooltip(); // init tooltip

        var unselectedCampaignCount = 0;

        function toggleCheckbox(checkboxImageId, checkbox) {
            var obj = j$(checkboxImageId)[0];
            if (checkbox.checked) {
                //<!-- This selection is at SAME level as element -->
                unselectedCampaignCount = 0;
                obj.src = "{!URLFOR($Resource.Reporting_Images, 'Checkmark_Selected_Icons.png')}";
            } else {
                if (filteredCampaignObjs)
                    unselectedCampaignCount = filteredCampaignObjs.length;
                obj.src = "{!URLFOR($Resource.Reporting_Images, 'Checkmark_Unselected_Icon.png')}";
            }
        }

        function toggleSelectedCampaigns(checkbox) {
            j$( ".eligCampaign" ).each(function() {
                if(checkbox.checked) {
                    j$(this).addClass(SELECT_GRID_ACTIVE_CLASS);
                }
                else {
                    j$(this).removeClass(SELECT_GRID_ACTIVE_CLASS);
                }
            });

            for(i=0;i<filteredCampaignObjs.length;i++) {
                filteredCampaignObjs[i].isSelected = checkbox.checked;
            }
        }

        function toggleInactiveOppStage(element){
            toggleInactiveOppStageAF(element.checked);
        }

        function toggleInactiveCampaignType(element){
            toggleInactiveCampaignTypeAF(element.checked);
        }

        const isOppFreezeOn = {!opportunityFreezeOn};
        const isCampaignFetchDisabled = {!isCampaignFetchDisabled};
        var wizardStep = 1;
        j$ = jQuery.noConflict();
        j$(document).ready(function() {
            j$('#modalDiv').append(createModal('confirmCMStatusReset', 'Confirm Campaign Member Status Reset', 'Confirm you would like to reset current Campaign Member Status selections. This will clear existing selections and select Campaign Member Status values where Responded is set to true in at least one campaign.', 'Cancel', 'OK', null, 'resetHasRespondedCMS()'));
            setPageTitle('');

            j$(".navBarStep-" + wizardStep).addClass("navBarStepActive");
            j$(".date-picker").datepicker({
                changeMonth: true,
                changeYear: true
            });

            j$('#includeBlankStartDatesCheckbox').prop('checked', {!includeBlankCampaignStartDate});
            j$('#selectAllCheckBox').prop('checked', true);

            bindJS();
            j$(".next-step").click(function() {
                // STEP 2 has the search box that needs to be cleared
                if (wizardStep == 2){ 
                    j$("#searchBox").val("");
                    filterCampaigns();
                }
                                         
                if (wizardStep != 5) {
                    j$(".section-step" + wizardStep).hide()
                    var originalStep = wizardStep;
                    wizardStep++;

                    j$(".section-step" + wizardStep).show();

                    j$(".navBarStep").removeClass("navBarStepActive");
                    j$(".navBarStep").removeClass("navBarStepVisited");

                    for (i = 1; i < wizardStep; i++) {
                        j$(".navBarStep-" + i).addClass("navBarStepVisited");
                    }
                    j$(".navBarStep-" + wizardStep).addClass("navBarStepActive");
                    //initializeStepData( true );
                    configureData(originalStep, wizardStep);
                }
            });

            j$(".previous-step").click(function() {
                if (wizardStep != 1) {
                    j$(".section-step" + wizardStep).hide()
                    var originalStep = wizardStep;
                    wizardStep--;

                    j$(".section-step" + wizardStep).show();

                    j$(".navBarStep").removeClass("navBarStepActive");
                    j$(".navBarStep").removeClass("navBarStepVisited");

                    for (i = 1; i < wizardStep; i++) {
                        j$(".navBarStep-" + i).addClass("navBarStepVisited");
                    }
                    j$(".navBarStep-" + wizardStep).addClass("navBarStepActive");
                    //initializeStepData( false );
                    configureData(originalStep, wizardStep);
                }
            });
            initCampaignStartDate();
            

            j$('#includeInactiveOppStagesCheckbox').prop('checked', {!includeInactiveOppStage});
            
            j$('#includeInactiveCampaignTypesCheckbox').prop('checked', {!includeInactiveCampaignType});
        });

        function initCampaignStartDate(){
            var campaignStartDateString = '{!JSENCODE(campaignStartDateString)}';
            if(campaignStartDateString !== ''){
                var datePickerItem = document.getElementById('startDate');
                datePickerItem.value = campaignStartDateString;
                setCampaignStartDate(datePickerItem);
            }
        }

        function initOppCreateDate(){
            var opportunityCreateDateString = '{!JSENCODE(opportunityCreateDateString)}';
            if(opportunityCreateDateString !== ''){
                var datePickerItem = document.getElementById('oppCreateDate');
                datePickerItem.value = opportunityCreateDateString;
            }
        }

        function setCMSButtonBackground(element){
            var CMSTypeIdSuffix = "Content";
            if(element.classList.contains(SELECT_GRID_ACTIVE_CLASS)){
                if(allChildrenActive(element.getAttribute('name') + CMSTypeIdSuffix)){
                    setBackgroundGreen(element.getAttribute('name'));
                } else {
                    setBackgroundYellow(element.getAttribute('name'));
                }
            } else {
                setBackgroundRed(element.getAttribute('name'));
            }
        }

        function bindJS() {

            function selectGridHandler() {
                j$(this).toggleClass(SELECT_GRID_ACTIVE_CLASS);
                if(this.parentNode.id.endsWith('showCampaignMemberStatus')){
                    setCMSButtonBackground(this);
                }
                j$(this).find(':checkbox').prop('checked', !j$(this).find(':checkbox').is(':checked'))
                var campaignObj = campaignIdToObj[j$(this).prop('id')];
                if(campaignObj != undefined) {
                    campaignObj.isSelected = !campaignObj.isSelected;
                }
            }
            function showCampaignTypeHandler(e) {
                j$('.CampaignTypeSpecificExclusionPanel').hide();
                var topOffset = e.pageY - 390;
                var leftOffset = e.pageX - 300;
                //var topOffset = 10;
                //var leftOffset = 10; 
                j$(this).parent().next('.content-container').css({
                    left: leftOffset,
                    top: topOffset
                });
                j$(this).parent().next('.content-container').show();
                j$(document).on("click", function(e) {
                    var container = j$('.CampaignTypeSpecificExclusionPanel');
                    if (!container.is(e.target) && container.has(e.target).length === 0) {
                        container.hide();
                    }
                });
                e.stopPropagation();
            }

            j$(".select-grid").off();
            j$(".select-grid").on("click", selectGridHandler);
            j$(".showCampaignTypeSpecificExclusion").off();
            j$(".showCampaignTypeSpecificExclusion").on("click", showCampaignTypeHandler);
            j$(".date-picker").datepicker({
                changeMonth: true,
                changeYear: true
            });
            initOppCreateDate();

            if (includeInactiveOppStage) {
              j$('#includeInactiveOppStagesCheckbox').prop('checked', true);
            }

            if (includeInactiveCampaignType) {
              j$('#includeInactiveCampaignTypesCheckbox').prop('checked', true);
            }
        }

        var campaignStartDate = '';
        function setCampaignStartDate(sel) {
            campaignStartDate = sel.value;
            setCampaignStartDateAF(sel.value);
        }

        var oppCreateDate = '';
        function setOppCreateDate(sel) {
            oppCreateDate = sel.value;
            setOppCreateDateAF(sel.value);
        }

        function goToStep(stepNum) {
            var originalStep = wizardStep;
            
            // clear search input for step 3, so that it updates according to current campaigns
            if (originalStep == 2 && stepNum == 3){ 
                j$("#searchBox").val("");
                filterCampaigns();
            }


            j$(".section-step" + wizardStep).hide()
            wizardStep = stepNum;
            j$(".section-step" + wizardStep).show();

            j$(".navBarStep").removeClass("navBarStepActive");
            j$(".navBarStep").removeClass("navBarStepVisited");

            for (i = 1; i < wizardStep; i++) {
                j$(".navBarStep-" + i).addClass("navBarStepVisited");
            }
            j$(".navBarStep-" + wizardStep).addClass("navBarStepActive");

            configureData(originalStep, stepNum);

        }
 
        function showCampaignTypeSpecificExclusion(event, CMSName) {
            j$('.campaignTypeExclusionFor' + CMSName).css({
                top: event.pageY,
                left: event.pageX
            }).show();
        }

        var isSkippingOneThree = false;
        var isSkippingOneFour = false;

        function configureData(oldStepNum, newStepNum) {
            
            if (oldStepNum == 3){ campaignPageLoadedBefore = true; }

            if (newStepNum == 4) {
                if(campaignObjs == undefined) {
                    initializeCampaigns();
                }
                
                j$('.saveSettingsButton').show();
                j$('.next-step').hide();
            }
            if (oldStepNum == 4) {
                j$('.saveSettingsButton').hide();
                j$('.next-step').show();
            }

            if (oldStepNum == 1 && newStepNum == 2) {
                if(j$('.searchBox')[0] != undefined) 
                    j$('.searchBox')[0].value = '';
                initializeCampaigns();
            } else if (oldStepNum == 1 && newStepNum == 3) {
                isSkippingOneThree = true;
                configureData(1, 2);
            } else if (newStepNum == 3) {
                initializeCMS();
            } else if (oldStepNum == 1) {
                initializeSelectorsAF();
            } else if (oldStepNum == 2 && newStepNum != 1) {
                populateBulkSettings();
            } else if (newStepNum == 4) {
                step4AF();
            } else if (newStepNum == 2) {
                if(j$('.searchBox')[0] != undefined) 
                    j$('.searchBox')[0].value = '';

                if(campaignObjs == undefined) {
                    initializeCampaigns();
                }
                else {
                    populateCampaigns(1);
                }
            } else {
                bindJSActionFunction();
            }
            
        }

        function initializeStepData(active) {
            if (active) {
                if (wizardStep == 2)
                //populateCampaigns();
                    step4AF();
                if (wizardStep == 3)
                    populateBulkSettings();
                if (wizardStep == 4)
                    step4AF();
            } else {
                bindJSActionFunction();
            }
        }

        function loading(val) {
            if (val) {
                j$('.contentLoading').show();
                j$('.content-panel').hide();
            } else {
                j$('.contentLoading').hide();
                j$('.content-panel').show();
            }

        }

        function loadingCampaignNames(val) {
            if (val) {
                j$('.campaignsLoading').show();
                j$('.campaignResults').hide();
                j$('.noEligibleCampaigns').hide();
            } else {
                j$('.campaignsLoading').hide();
                j$('.campaignResults').show();
            }

        }

        function showCampaignFetchDisabledWarning() {
            j$('.campaignDisabledText').text('Campaign tab is currently is disabled in this org. To exclude campaigns, please use custom filter under advanced settings.');
        }

        function processCampaignsData(campaignData) {
            campaignObjs = campaignData;

            for(i=0;i<campaignData.length;i++) {
                campaignObjs[i].obj.Name = decodeURIComponent(campaignObjs[i].obj.Name);
                campaignIdToObj['campaign_' + campaignObjs[i].obj.Name.replace(/\s/g, '')] = campaignObjs[i];
            }

            filteredCampaignObjs = campaignObjs;

            populateCampaigns(1);
            if (isSkippingOneThree){
                configureData(2, 3);
                isSkippingOneThree = false;
            }

            if (isSkippingOneFour){
                getCMSWithCampaignTypeValue();
                isSkippingOneFour = false;
            }
        }

        var defaultSort = 'nameAsc';
        var campaignFetchError = false;
        function initializeCampaigns() {
            var selectedCampaignTypes = [];
            j$('.campaign-type-panel').find('.select-grid-active').each(function(){ selectedCampaignTypes.push(this.id); });
            var includeBlankStartDates = j$('#includeBlankStartDatesCheckbox').is(':checked');
            j$('#sortCampaignSelect').val(defaultSort);
            if (isCampaignFetchDisabled) {
                showCampaignFetchDisabledWarning();
                campaignFetchError = true;
                processCampaignsData([]);
            } else {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.Reporting_WizardController.getCampaigns}',
                    includeBlankStartDates,
                    campaignStartDate,
                    selectedCampaignTypes,
                    function(result, event) {
                        if (event.type === 'exception') {
                            console.log("exception");
                            console.log(event);
                            campaignFetchError = true;
                            result = [];
                        } else {
                            campaignFetchError = false;
                        }
                        processCampaignsData(result);
                    }
                );
            }
        }

        var campaignIdToObj = {};

        var campaignObjs;
        var filteredCampaignObjs;
        var currentPage;
        var totalPages;
        var pageSize = 24;

        function populateCampaigns(pageNo) {

            totalPages = Math.ceil(filteredCampaignObjs.length / pageSize);
            j$('.campaignResultsJS').empty();
            currentPage = pageNo;
            startingCampaignIndex = pageSize*(pageNo-1);
            endingCampaignIndex = pageSize*(pageNo) > filteredCampaignObjs.length ? filteredCampaignObjs.length : pageSize*(pageNo);
            
            for(i=startingCampaignIndex;i<endingCampaignIndex;i++) {
                var classes = filteredCampaignObjs[i].isSelected ? 'select-grid select-grid-overflow eligCampaign select-grid-active' : 'select-grid eligCampaign select-grid-overflow';
                var tooltipTitle = sanitizeCampaignName(filteredCampaignObjs[i].obj.Name);
                if(filteredCampaignObjs[i].obj.Type !== undefined)
                    tooltipTitle += 'Type: ' + filteredCampaignObjs[i].obj.Type;
                if(filteredCampaignObjs[i].obj.StartDate !== undefined)
                    tooltipTitle += '<br>Start Date: ' + new Date(filteredCampaignObjs[i].obj.StartDate).toString().slice(0, 15);
                var attributes = {id: 'campaign_' + filteredCampaignObjs[i].obj.Name.replace(/\s/g, ''), style: "height:50px;line-height: 1.5;width: 210px;", class: classes, text: filteredCampaignObjs[i].obj.Name, title: tooltipTitle};
                attributes['data-toggle'] = 'tooltip';
                var $div = j$("<div>", attributes);
                j$('.campaignResultsJS').append($div);
            }

            j$('.showingCampaignsLabel').text((startingCampaignIndex + 1) + ' to ' + endingCampaignIndex + ' out of ' + filteredCampaignObjs.length);
            setPagination();
            bindJS();
            j$('[data-toggle="tooltip"]').tooltip({
                html: true, 
                delay: { show: 750, hide: 300 }
            }); // init tooltip

            initUnselectedCampaignCount();
                        
            // handles campaign selections
            j$(".campaignResultsJS > div").on('click', function(){
                if (j$(this).hasClass("select-grid-active")){
                    unselectedCampaignCount--;      
                } else { //unselect campaign
                    unselectedCampaignCount++;
                }
                setSelectAll();
            });
            
            // handles search box changes
            j$("#searchBox").keyup(function(){
                initUnselectedCampaignCount();
            });
        }

        function initUnselectedCampaignCount(){
            unselectedCampaignCount = 0;
            var options = j$(".campaignResultsJS").children();
            for (var i = 0; i < options.length; i++){
                if (!j$(options[i]).hasClass("select-grid-active"))
                    unselectedCampaignCount++;
            }
            setSelectAll();
        }
        
        function setSelectAll(){
            if (unselectedCampaignCount == 0){
                j$("#selectAllCheckBox").prop('checked', true);
            } else {
                j$("#selectAllCheckBox").prop('checked', false);
            }
        }

        function sanitizeCampaignName(campaignName){
            var tooltipContent = document.createElement('div');
            tooltipContent.textContent = campaignName;
            return tooltipContent.outerHTML;
        }

        function setPagination() {

            j$('.paginationParent').empty();

            if (currentPage>1) {
                j$('.paginationParent').append(j$("<span>", {
                    class: 'pagination-standard',
                    text: '<  ',
                    onclick: 'populateCampaigns('+(currentPage-1)+');'
                }));
            }
            
            j$('.paginationParent').append(j$("<span>", {
                class: (i==currentPage ? 'pagination-standard pagination-active-page' : 'pagination-standard'),
                text: '1  ',
                onclick: 'populateCampaigns(1);'
            }));

            if (currentPage>4) {
                j$('.paginationParent').append(j$("<span>", {
                    class: 'pagination-standard',
                    text: '...  ',
                }));
            }

            for (i=currentPage-2; i<currentPage+3; i++) {
                if (i>1 && i<totalPages) {
                    j$('.paginationParent').append(j$("<span>", {
                        class: (i==currentPage ? 'pagination-standard pagination-active-page' : 'pagination-standard'),
                        text: i + '  ',
                        onclick: 'populateCampaigns(' + i + ');'
                    }));
                }
            }

            if (currentPage<totalPages-3) {
                j$('.paginationParent').append(j$("<span>", {
                    class: 'pagination-standard',
                    text: '...  ',
                }));
            }

            j$('.paginationParent').append(j$("<span>", {
                class: (i==currentPage ? 'pagination-standard pagination-active-page' : 'pagination-standard'),
                text: totalPages + '  ',
                onclick: 'populateCampaigns('+totalPages+')'
            })); 

            if (currentPage<totalPages) {
                j$('.paginationParent').append(j$("<span>", {
                    class: 'pagination-standard',
                    text: '>',
                    onclick: 'populateCampaigns('+(currentPage+1)+')'
                })); 
            }
        }
        
        function campaignComparer(a,b) {
            return a.obj.StartDate - b.obj.StartDate;
        }
        
        function sortCampaigns(selectedValue) {
        
            if(selectedValue === 'nameAsc') 
                filteredCampaignObjs = campaignObjs.sort(function(a,b){ return a.obj.Name.localeCompare(b.obj.Name); });
            else if(selectedValue === 'nameDsc') 
                filteredCampaignObjs = campaignObjs.sort(function(a,b){ return b.obj.Name.localeCompare(a.obj.Name); });
            else if(selectedValue === 'startDateAsc' || selectedValue === 'startDateDsc') {
                var withStartDate = [];
                var withoutStartDate = [];
                for(campaign of campaignObjs)
                    if(campaign.obj.StartDate !== undefined) withStartDate.push(campaign);
                    else withoutStartDate.push(campaign);
                
                filteredCampaignObjs = withStartDate.sort(function(a,b){ return (selectedValue === 'startDateAsc')?campaignComparer(a,b):campaignComparer(b,a) });
                filteredCampaignObjs = filteredCampaignObjs.concat(withoutStartDate); // Place campaigns with no StartDate at the back
            }
            
            populateCampaigns(1);
        }

        var searchFieldInput;
        function filterCampaigns() {
            searchFieldInput = j$('.searchBox').val();

            const parent = j$('.searchBox').parent();
            if (searchFieldInput.length > 0) {
                if (parent.find('.clearSearchBoxText').length === 0) {
                    parent.append('<span class="clearSearchBoxText" onclick="clearSearchBox();">x</span>');
                }
            } else {
                parent.find('.clearSearchBoxText').remove();
            }

            filteredCampaignObjs = [];
            for(i=0;i<campaignObjs.length;i++) {
                var lowerCaseCampaignName = campaignObjs[i].obj.Name.toLowerCase(); 
                if(lowerCaseCampaignName.indexOf(searchFieldInput.toLowerCase()) >= 0) {
                    filteredCampaignObjs.push(campaignObjs[i]);
                }
            }

            populateCampaigns(1);
        }   

        function clearSearchBox() {
            var input = j$("#searchBox");
            input.val("");
            input.focus();
            filterCampaigns();
        }

        function isNumericWithCommas(string) {
          return /^[0-9,]+$/.test(string);
        }

        function validateRelevantPriorDayRange() {
          const input = document.querySelector('.relevantPriorDayRange');
          if (isNumericWithCommas(input.value)) {
            input.classList.remove('highlight-invalid-input');
          }
        }

        function validateAndSaveSettings() {
            const input = document.querySelector('.relevantPriorDayRange');
            if (isNumericWithCommas(input.value)) {
              input.value = input.value.replace(/,/, '');
              if (input.value.length) {
                saveSettings();
              } else {
                input.classList.add('highlight-invalid-input');
                displayInvalidModal();
              }
            } else {
              input.classList.add('highlight-invalid-input');
              displayInvalidModal();
            }
        }

        function saveSettings() {
            // Take out selected campaigns.
            for(var i = campaignObjs.length - 1; i >= 0; i--) {
                if(campaignObjs[i].isSelected) {
                    campaignObjs.splice(i, 1);
                }
            }

            var includeBlankStartDates = j$('#includeBlankStartDatesCheckbox').is(':checked');
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.Reporting_WizardController.saveUncheckedCampaigns}', campaignObjs, includeBlankStartDates, inverseContentPanelOptions,
                function(result, event) {
                    if (event.type === 'exception') {
                        console.log("exception - unchecked campaigns not saved");
                        console.log(event);
                    } else if (event.status) {
                        saveBulkSettingsAF();
                    }
                });
        }
        
        var oldCmsByTypeSelectorJSON;
        var CmsByTypeSelectorJSON = '';
        var selectedCampaignIds;
        var lastQueriedId;
        var selectedCampaignTypes = [];
        var selectedCampaigns = [];

        function getSelectedCampaignIds(){
            selectedCampaignIds = [];
            for(var i=0; i<filteredCampaignObjs.length; i++){
                if(filteredCampaignObjs[i].isSelected){
                    selectedCampaignIds.push(filteredCampaignObjs[i].obj.Id);
                }
            }
        }
        function initializeCMS() {
            loading(true);
            getSelectedCampaignIds();
            j$('.campaign-type-panel').find('.select-grid-active').each(function(){ selectedCampaignTypes.push(this.id); });
            // clear the JSON string everytime method is invoked
            CmsByTypeSelectorJSON = '';
            invokeRemoteActionGetCampaignMemberStatuses(null);
        }

        // takes in an id, which is the lastQueriedId
        function invokeRemoteActionGetCampaignMemberStatuses(id) {
            loading(true);
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.Reporting_WizardController.getCampaignMemberStatuses}', selectedCampaignTypes, campaignFetchError ? null : selectedCampaignIds, id,
                function(result, event) {
                    loading(false);
                    if (event.type === 'exception') {
                        console.log("exception");
                        console.log(event);
                    } else if (event.status) {
                        // always append to end of cmsByTypeSelectorJSON
                        if (CmsByTypeSelectorJSON != '') {
                            CmsByTypeSelectorJSON = JSON.stringify(updateCmsByTypeSelectorJSON(JSON.parse(CmsByTypeSelectorJSON), result['typeByCMSSelector']));
                        } else {
                            CmsByTypeSelectorJSON = JSON.stringify(result['typeByCMSSelector']);    
                        }
                        
                        if (result['lastQueriedId'] != null) {
                            lastQueriedId = result['lastQueriedId'];
                        }

                        if (Object.keys(result['typeByCMSSelector']).length < 40000) {
                            // terminating step
                            if(oldCmsByTypeSelectorJSON != CmsByTypeSelectorJSON){
                              oldCmsByTypeSelectorJSON = CmsByTypeSelectorJSON;
                              initializeCMSAF(CmsByTypeSelectorJSON);
                            } 
                        } else if (Object.keys(result['typeByCMSSelector']).length == 40000) {
                           // call the method to request for more
                           invokeRemoteActionGetCampaignMemberStatuses(lastQueriedId);
                        }
                    }
                }, {escape: false});
        }

        function updateCmsByTypeSelectorJSON(currentJSONObject, resultJSONObject) {
            for (var key in resultJSONObject) {
                if (currentJSONObject[key] == undefined) {
                    currentJSONObject[key] = resultJSONObject[key];
                } else {
                    for (var index in resultJSONObject[key]) {
                        if (JSON.stringify(resultJSONObject[key][index]) != undefined) {
                            currentJSONObject[key].push(resultJSONObject[key][index]);    
                        }
                    }
                }
            }
            return currentJSONObject;
        }

        function escapeSingleQuotesBSs(str) {
          var replaceMap = {
            '\'': '\\\'',
            '\\': '\\\\'
          };
          return str.replace(/./g, (char) => (replaceMap[char] ? replaceMap[char] : char));
        }

        //use to populate page 3 when user enters the page.
        var inverseContentPanelOptions = {}; //stores what is NOT selected because that is how it is implemented in DB.
        //whenever user clicks on the button, clear the key, and readd the options to the map for that key.
        function campaignTypeClick(campaignMemberStatus, element){
            if(j$("[id$=campaignMemberStatusPanel] div[name='" + escapeSingleQuotesBSs(campaignMemberStatus) + "']").hasClass(SELECT_GRID_ACTIVE_CLASS)){
                setBackgroundIfSiblingsActive(element, campaignMemberStatus);
            }
            var valueArr = inverseContentPanelOptions[campaignMemberStatus];
            if(isEmpty(inverseContentPanelOptions[campaignMemberStatus])) valueArr = [];
            if (element.classList.contains(SELECT_GRID_ACTIVE_CLASS)) { 
                valueArr.push(element.id);
            } else{ 
                var index = valueArr.indexOf(element.id);
                if (index > -1) valueArr.splice(index, 1);
            }
            inverseContentPanelOptions[campaignMemberStatus] = valueArr;
        }
        var campaignPageLoadedBefore = false;

        function setBackgroundGreen(id){
            j$("[id$=campaignMemberStatusPanel] div[name='" + escapeSingleQuotesBSs(id) + "']").removeClass('partial-selection-background red-background').addClass('green-background');
        }

        function setBackgroundYellow(id){
            j$("[id$=campaignMemberStatusPanel] div[name='" + escapeSingleQuotesBSs(id) + "']").removeClass('green-background red-background').addClass('partial-selection-background');
        }

        function setBackgroundRed(id){
            j$("[id$=campaignMemberStatusPanel] div[name='" + escapeSingleQuotesBSs(id) + "']").removeClass('partial-selection-background green-background').addClass('red-background');
        }

        /**
         * Set background color of buttonId depending on element's active class
         * @param {Object} element  [Element to check for active class]
         * @param {String} buttonId [Id to change color]
         */
        function setBackgroundIfSiblingsActive(element, buttonId){
            if(element.classList.contains(SELECT_GRID_ACTIVE_CLASS)){
                setBackgroundYellow(buttonId);
            } else if(allChildrenActive(element.parentNode, element)){
                setBackgroundGreen(buttonId);
            }
        }

        /**
         * Checks through all children to see if all has active class.
         * @param  {Object} parent  Parent element
         * @param  {Object} element [Optional] Element which triggered this method
         * @return {Boolean}        
         */
        function allChildrenActive(parent, element){
            if(typeof parent === "string"){
                parent = document.getElementsByName(parent)[0];
            }
            var allActive = true;
            for(var i=0; i<parent.children.length; i++){
                if(parent.children[i] !== element && !parent.children[i].classList.contains(SELECT_GRID_ACTIVE_CLASS)){
                    allActive = false;
                    break;
                }
            }
            return allActive;
        }

        function getCMSWithCampaignTypeValue(){
            if (CmsByTypeSelectorJSON != null && CmsByTypeSelectorJSON !== ''){
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.Reporting_WizardController.getCMSWithCampaignTypeSelector}',CmsByTypeSelectorJSON,
                    function(result, event) {
                        loading(false);
                        if (event.type === 'exception') {
                            console.log("exception");
                            console.log(event);
                        } else if (event.status) {
                            getCampaignTypeValues(result);
                        }
                }, {escape: false});
            } else {
                isSkippingOneFour = true;
                configureData(1, 3);
            }
        }

        function getCampaignTypeValues(CMSWithCampaignTypeSelector){
            j$('.getCampaignType').each(function(i, val){
                populateContentPanel(CMSWithCampaignTypeSelector, j$(this).data('name'));
            });
            bindJS();
        }

        function showResetConfirmation(){
            j$('#confirmCMStatusResetModal').modal('show');
        }

        function resetHasRespondedCMS(){
            j$('.getCampaignType').each(function(i, val){
                for(var i=0; i<val.children.length; i++)
                    if((val.children[i].classList.contains('hasResponded') && !val.children[i].classList.contains('select-grid-active')) || (!val.children[i].classList.contains('hasResponded') && val.children[i].classList.contains('select-grid-active')))
                        val.children[i].click();
            });
            bindJS();
        }

        function isEmpty(map) {
           for(var key in map) {
              return !map.hasOwnProperty(key);
           }
           return true;
        }

       function populateContentPanel(CMSWithCampaignTypeSelector, contentPanelID){
            var trimmedcontentPanelID = contentPanelID.slice(0, -7);
            var isParentCMSExcluded = !(j$("[name='" + escapeSingleQuotesBSs(contentPanelID) + "']").parent().prev().hasClass(SELECT_GRID_ACTIVE_CLASS));
            var CMSArr = CMSWithCampaignTypeSelector[trimmedcontentPanelID];
            var typesDisabled = false;

            for(var i=0; i<CMSArr.length; i++){
                var div = document.createElement('div');
                div.style.width = '180px';
                div.style.lineHeight = '33px';
                div.style.height = '33px';
                div.addEventListener("click", function() {
                    campaignTypeClick(trimmedcontentPanelID, this);
                }.bind(div));

                if(!isParentCMSExcluded && campaignPageLoadedBefore && !isEmpty(inverseContentPanelOptions[trimmedcontentPanelID])){
                    var index = inverseContentPanelOptions[trimmedcontentPanelID].indexOf(CMSArr[i].selectorAPIName);
                    if (index == -1) div.className = SELECT_GRID_ACTIVE_CLASS; 
                } else { //first time load
                    if(CMSArr[i].isSelected && !isParentCMSExcluded){ 
                        div.className = SELECT_GRID_ACTIVE_CLASS; 
                        if(!(trimmedcontentPanelID in inverseContentPanelOptions)){ //key does not currently exist. create key.
                            inverseContentPanelOptions[trimmedcontentPanelID] = [];
                        }
                    } else { //populate the inverseContentPanelOptions. else because push only if not active.
                        typesDisabled = true;
                        var valueArr = [];
                        if(isEmpty(inverseContentPanelOptions)){ //inverseContentPanelOptions not initialized
                            valueArr.push(CMSArr[i].selectorAPIName);
                        } else { //check if key exists
                            if(trimmedcontentPanelID in inverseContentPanelOptions)
                                valueArr = inverseContentPanelOptions[trimmedcontentPanelID];
                            valueArr.push(CMSArr[i].selectorAPIName);
                        }
                        inverseContentPanelOptions[trimmedcontentPanelID] = valueArr;
                    }
                } 

                if(CMSArr[i].hasResponded)
                    div.className += ' hasResponded';
                div.className += ' select-grid';
                div.id = CMSArr[i].selectorAPIName;
                div.textContent = CMSArr[i].selectorLabel;
                document.getElementsByName(contentPanelID)[0].append(div);
                
                var checkbox = document.createElement('input');
                checkbox.type = 'checkbox'; 
                checkbox.checked = true;
                checkbox.style.visibility = 'hidden';
                checkbox.style.position = 'absolute';
                div.appendChild(checkbox);
              
                var ii = document.createElement("i");
                ii.className = 'glyphicon glyphicon-check';
                ii.style.position = 'absolute';
                ii.style.visibility = 'hidden';
                ii.style.color = 'white';
                div.appendChild(ii);  
            }

            setCMSButtonBackground(document.getElementsByName(trimmedcontentPanelID)[0]);
        }

        function generateCsv() {
            var csvContents = 'Category,Field,Sub-Field,Value\r\n';

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.Reporting_Utility.getClaritySettings}',
                function(result, event) {
                    // Campaign Start Date
                    if (result['Campaign Start Date']) {
                        csvContents += ['Campaign Start Date', 'Campaign Start Date', '', result['Campaign Start Date'][ns+'Value__c']].join() + '\r\n';
                    }
                    
                    // Campaign Type
                    if (result['Campaign Type'] && result['Exclude Campaign Type']) {
                        var excludedCampaignTypes = JSON.parse(result['Exclude Campaign Type'][ns+'Value__c'].replace(/&quot/g,'"').replace(/;/g,''));
                        for (var i=0; i<result['Campaign Type'].length; i++) {
                            csvContents += ['Campaign Type', result['Campaign Type'][i], '', !excludedCampaignTypes.includes(result['Campaign Type'][i])].join() + '\r\n';
                        }
                    }

                    // Eligible Campaigns
                    if (result['Eligible Campaign']) {
                        for (var i=0; i<result['Eligible Campaign'].length; i++) {
                            csvContents += ['Eligible Campaign', result['Eligible Campaign'][i]['obj']['Name'].replace(/,/g, ' '), result['Eligible Campaign'][i]['obj']['Type'], result['Eligible Campaign'][i]['isSelected']].join() + '\r\n';
                        }
                    }

                    // Campaign Member Status
                    if (result['Campaign Member Status']) {
                        var campaignMemberStatuses = result['Campaign Member Status']['Type By CMS Selector'];
                        if (campaignMemberStatuses) {
                            for (var key in campaignMemberStatuses) {
                                for (var i=0; i<campaignMemberStatuses[key].length; i++) {
                                    csvContents += ['Campaign Member Status', key, campaignMemberStatuses[key][i]['selectorLabel'], campaignMemberStatuses[key][i]['isSelected']].join() + '\r\n';
                                }
                            }
                        }
                    }
                    
                    // Lead Status
                    if (result['Lead Status'] && result['Exclude Lead Status']) {
                        var excludedLeadStatuses = JSON.parse(result['Exclude Lead Status'][ns+'Value__c'].replace(/&quot/g,'"').replace(/;/g,''));
                        for (var i=0; i<result['Lead Status'].length; i++) {
                            csvContents += ['Lead Status', result['Lead Status'][i]['MasterLabel'], '', !excludedLeadStatuses.includes(result['Lead Status'][i]['MasterLabel'])].join() + '\r\n';
                        }
                    } 

                    // Time Frame
                    if (result['Relevant Day Range']) {
                        csvContents += ['Relevant Time Frame', '', '', result['Relevant Day Range'][ns+'Value__c']].join() + '\r\n';
                    }

                    // Opportunity Type
                    if (result['Opportunity Type'] && result['Exclude Opportunity Type']) {
                        var excludedOpportunityTypes = JSON.parse(result['Exclude Opportunity Type'][ns+'Value__c'].replace(/&quot/g,'"').replace(/;/g,''));
                        for (var i=0; i<result['Opportunity Type'].length; i++) {
                            csvContents += ['Opportunity Type', result['Opportunity Type'][i], '', !excludedOpportunityTypes.includes(result['Opportunity Type'][i])].join() + '\r\n';
                        }
                    }

                    // Opportunity Stage
                    var opportunityStages = result['Opportunity Stage'];
                    if (opportunityStages && result['Exclude Opportunity Stage']) {
                        var excludedOpportunityStages = JSON.parse(result['Exclude Opportunity Stage'][ns+'Value__c'].replace(/&quot/g,'"').replace(/;/g,''));
                        for (var i=0; i<opportunityStages.length; i++) {
                            csvContents += ['Opportunity Stage', opportunityStages[i]['MasterLabel'], '', !excludedOpportunityStages.includes(opportunityStages[i]['MasterLabel'])].join() + '\r\n';
                        }
                    }

                    // Schedule Run
                    if (result['Scheduling Type']) csvContents += ['Schedule Run', 'Scheduling Type', '', result['Scheduling Type'][ns+'Value__c']].join() + '\r\n';
                    if (result['Scheduling Date'] && result['Scheduling Date'][ns+'Value__c']!='?') {
                        csvContents += ['Schedule Run', 'Scheduling Date', '', result['Scheduling Date'][ns+'Value__c']].join() + '\r\n';
                    }
                    if (result['Scheduling Day'] && result['Scheduling Day'][ns+'Value__c']!='?') {
                        csvContents += ['Schedule Run', 'Scheduling Day', '', result['Scheduling Day'][ns+'Value__c']].join() + '\r\n';
                    }
                    if (result['Scheduling Time']) csvContents += ['Schedule Run', 'Scheduling Time', '', result['Scheduling Time'][ns+'Value__c']].join() + '\r\n';
                    if (result['Scheduling Time Period']) csvContents += ['Schedule Run', 'Scheduling Time Period', '', result['Scheduling Time Period'][ns+'Value__c']].join() + '\r\n';

                    var dummy = document.createElement('textarea');
                    dummy.innerHTML = csvContents; // decode HTML entities
                    csvContents = dummy.value;

                    var a = document.createElement('a');
                    a.href     = 'data:attachment/csv;charset=utf-8,\ufeff' + escape(csvContents);
                    a.target   ='_blank';
                    a.download = 'CampaignSettings.csv';
                    a.innerHTML = "Download CSV";

                    a.click();
                }
            );
        }

        function displayInvalidModal() {
          if (isOppFreezeOn) {
            j$(".oppFreezeModal").modal("show");
          } else {
            j$(".invalidInputModal").modal("show");
          }
        }

        function displaySuccessModal() {
            if (isOppFreezeOn) {
                j$(".oppFreezeModal").modal("show");
            } else {
                j$(".myModal2").modal("show");
            }
        }

    </script>
</apex:page>