<apex:page docType="html-5.0" controller="JBCXM.LayoutBroker" sidebar="false" title="Layout Manager" tabStyle="Administration__tab" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker">
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSVendor/js/vendor/HTMLSanitizer.js"></script>

    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/NS/NS/newStack/js/restclient/restClient.js"></script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSVendor/js/vendor/semver.min.js"></script>
    <script>
        var hc                      = eval({!(headerConfig)});
        var apiEndPoint             = hc.gatewayURL;
        var authorization           = "";
        var appSessionId            = hc.appSessionId;
        var appUserId               = hc.appUserId;
        var appOrgId                = hc.appOrgId;
        var nsParams 				= eval({!(nsParams)});
        var CDNSettings             = eval({!(GainsightCDNSettings)});
        var host                    = "SALESFORCE";
        var GS = GS || {};
            var nsParams                = fakeEval('{!JSINHTMLENCODE(nsParams)}');GS.gainsightTabs = eval({!(GainsightTabs)});
            GS.remotingEndPoint     = '{!$RemoteAction.LayoutBroker.layoutRequestBroker}';
            GS.commonRemotingEndPoint   = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
            GS.packageNS            = "{!(pkgNS)}";
    		GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";

            GS.nsURL                = nsParams.url;
            GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";
            GS.sessionId = "{!NSSessionId}";
            GS.isNSEnabled = (nsParams.nsenabled == "true" || nsParams.nsenabled == true);
            GS.appVersion 				= '{!(GainsightAppVersion)}';
            GS.isScorecardEnabled       = {!(isScorecardEnabled)};
            GS.customLookUpConfig       = JSON.parse("{!(JSENCODE(customLookUpConfigMap))}");
            GS.gatewayURL               = hc.gatewayURL;
            GS.isLightningEnabled       = hc.isLightningEnabled;

            GS.customLabels  = fakeEval('{!JSINHTMLENCODE(customLabelsMap)}');
            GS.maxContainerCountPerLayout    = '{!(maxContainerCount)}';
            GS.maxContainerCountPerLayout = (typeof GS.maxContainerCountPerLayout != 'undefined' && GS.maxContainerCountPerLayout != '')
                                                ? parseInt(GS.maxContainerCountPerLayout) : 10;
            GS.churnLabelMap        = fakeEval('{!JSINHTMLENCODE(churnLabelMap)}');
            GS.honourTimezonePreferences = true; // Only in few pages needs to honor, timezone needs to honored for sfdc data
            GS.displayTimezone = true; // Display Timezone on UI (Especially in the Grid)
    </script>

    <div id="gs-app-container">
         <div class="gs-module-container">
            <div class="layoutManager"></div>
         </div>
    </div>

    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSApp/cdnVersionResolver.js"  type="text/javascript"></script>
    <apex:includeScript value="/support/console/43.0/integration.js"/>
    <apex:outputpanel rendered="{!If(JSINHTMLENCODE($CurrentPage.parameters.env) == null , true, false)}">
        <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSApp/layoutManagerFeatureResolver.js"  type="text/javascript"></script>
    </apex:outputpanel>

    <apex:outputpanel rendered="{!If(JSINHTMLENCODE($CurrentPage.parameters.env) == "dev" , true, false)}">
        <c:Alerts360 />
        <apex:stylesheet value="{!IF(JSINHTMLENCODE($CurrentPage.parameters.apppath) != null, JSINHTMLENCODE($CurrentPage.parameters.apppath), "https://127.0.0.1:9091")}/UI/layout/styles/layout.css" />
        <script type="text/javascript" src="{!IF(JSINHTMLENCODE($CurrentPage.parameters.apppath) != null, JSINHTMLENCODE($CurrentPage.parameters.apppath), "https://127.0.0.1:9091")}/UI/layout/scripts/layout.bundle.js"></script>
    </apex:outputpanel>

    <script>
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!(JSINHTMLENCODE($Organization.Name))}",
            userName: "{!(JSINHTMLENCODE($User.FirstName))}"+" "+"{!(JSINHTMLENCODE($User.LastName))}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/CustomJS/CustomJS/analyticsWrapper.js"></script>
    <script>
        gainsightTrackEvents.pushPageViews('Administration - Layout Manager');
    </script>
   <apex:form ></apex:form>
</apex:page>