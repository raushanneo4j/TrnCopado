<apex:page controller="pse.BillingDocCreationSchedulerController"
			lightningStylesheets="true"
			tabStyle="Billing_Document_Creation_Scheduler__tab">

	<c:lightningOutDependency exportObjectName="$FFOUTAPP"/>
	<c:ffui_header instanceName="$FFHEADER"/>
	<c:WaitComponent />

	<style>
		.ffdc-scheduler-config-tabs
		{
			width: auto!important;
			min-width: auto!important;
		}

		div.ffdc-scheduler-config-panel table.ffdc-scheduler-config-form select
		{
			margin-right: 5px;
		}

		table.ffdc-scheduler-config-form tr:nth-child(2) select
		{
			margin-right: 5px;
		}
	</style>

	<apex:outputPanel rendered="{!$User.UIThemeDisplayed=='Theme3'}">
		<style>
			table.ffdc-scheduler-config-form select
			{
				margin-right: 5px;
			}
		</style>
	</apex:outputPanel>

	<apex:pageMessages />

	<apex:form >
		<apex:pageBlock mode="edit">
			<apex:actionFunction name="runNow" action="{!runNow}"/>
			<apex:actionFunction name="scheduleJob" action="{!scheduleJob}"/>

			<apex:pageBlockSection columns="1">
				<c:fflib_SchedulerConfiguration schedulerConfiguration="{!pageSchedulerConfig}"/>
			</apex:pageBlockSection>
		</apex:pageBlock>
	</apex:form>

	<script>
		prepareVFHeader();

		function prepareVFHeader()
		{
			var config = {
				objectName: '{!JSENCODE($Label.BillingDocumentCreationSchedulerTitle)}',
				onRender: 'onHeaderLoadCallback',
				documentIcon: {
					name: 'psa_bdcreationscheduler',
					namespace: $FFOUTAPP.getNamespace()
				},
				helpUrl: '{!$Page.BillingDocumentCreationSchedulerHelp}',
				buttons: [{
					id: 'scheduleJob',
					label: '{!JSENCODE($Label.common_label_schedule)}',
					actionFn: 'scheduleJob'
				}, {
					id: 'runNow',
					label: '{!JSENCODE($Label.common_label_run_now)}',
					actionFn: 'runNow'
				}]
			};

			if({!hasPageLoadError})
			{
				config.buttons[0].disabled = true;
				config.buttons[1].disabled = true;
			}
			else
			{
				config.buttons[0].disabled = false;
				config.buttons[1].disabled = false;
			}

			wait(true);
			$FFHEADER.renderHeader(config);
		}

		function onHeaderLoadCallback()
		{
			wait(false);
		}
	</script>
</apex:page>